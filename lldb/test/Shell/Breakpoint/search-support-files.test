# In these tests we will set breakpoints on a function by name. That function
# is defined in a header file (search-support-files.h) and will therefore be
# inlined into the file that includes it (search-support-files.cpp).
#
# TODO(kwk): Check that we can also do the same with C++ methods in files?
#            (See https://lldb.llvm.org/use/tutorial.html and look for --method.)

# RUN: %build %p/Inputs/search-support-files.cpp -o %t.out
# RUN: %lldb -b -s %s %t.out | FileCheck %s 

#    Set breakpoint by function name.

breakpoint set -n function_in_header
# CHECK: (lldb) breakpoint set -n function_in_header
# CHECK-NEXT: Breakpoint 1: where = {{.*}}.out`function_in_header(){{.*}} at search-support-files.h

breakpoint set -n main
# CHECK: (lldb) breakpoint set -n main
# CHECK-NEXT: Breakpoint 2: where = {{.*}}.out`main{{.*}} at search-support-files.cpp

#   Set breakpoint by function name and filename (the one in which the function
#   is inlined, aka the compilation unit).

breakpoint set -n function_in_header -f search-support-files.cpp
# CHECK: (lldb) breakpoint set -n function_in_header -f search-support-files.cpp
# CHECK-NEXT: Breakpoint 3: no locations (pending).

#   Set breakpoint by function name and source filename (the file in which the
#   function is defined).
#
#   NOTE: This test is the really interesting one as it shows that we can
#         search by source files that are themselves no compilation units.

breakpoint set -n function_in_header -f search-support-files.h
# CHECK: (lldb) breakpoint set -n function_in_header -f search-support-files.h
# CHECK-NEXT: Breakpoint 4: where = {{.*}}.out`function_in_header(){{.*}} at search-support-files.h

#   Set breakpoint by function name and source filename. This time the file
#   doesn't exist to prove that we haven't widen the search space too much. When
#   we search for a function in a file that doesn't exist, we should get no
#   results.

breakpoint set -n function_in_header -f file-not-existing.h
# CHECK: (lldb) breakpoint set -n function_in_header -f file-not-existing.h
# CHECK-NEXT: Breakpoint 5: no locations (pending).
# CHECK-NEXT: WARNING: Unable to resolve breakpoint to any actual locations.
