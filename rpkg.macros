#!/bin/bash
#<white>vim:syntax=sh 

# This file contains user-defined macros for rpkg-util that can be used in a spec file.
# See https://docs.pagure.org/rpkg-util/v3/macro_reference.html#user-defined-macros

function llvm_git_upstream_ref {
    # TODO(kwk): Define an "upstream" tag that gets used to distringuish between
    # the current upstream and downstream git ref.
    #echo -n $(git rev-parse HEAD)
    
    # This is the upstream commit upon which the downstream is currently based.
    # We need this in order to have the same package version for all LLVM
    # packages even when we add downstream patches.
    # TODO(kkleine): find a way to determine this automatically
    echo -n 9cbe000df269117905ee68a87800f1d96cfb9885
}

function llvm_release {
    git_ref=$(llvm_git_upstream_ref)
    echo -n $(git show $git_ref:llvm/CMakeLists.txt | grep -ioP 'set\(\s*LLVM_VERSION_(MAJOR|MINOR|PATCH)\s\K[0-9]+' | paste -sd '.')
}
function llvm_snapshot_prefix {
    local yyyymmdd="$(date +%Y%m%d)"
    local llvm_version=$(llvm_release)
    local llvm_version_major=$(echo $llvm_version | grep -ioP '^[0-9]+')
    local llvm_version_minor=$(echo $llvm_version | grep -ioP '\.\K[0-9]+' | head -n1)
    local llvm_version_patch=$(echo $llvm_version | grep -ioP '\.\K[0-9]+$')
    local llvm_git_revision=$(llvm_git_upstream_ref)
    local llvm_git_revision_short=${llvm_git_revision:0:14}

cat <<EOF
################################################################################
# BEGIN SNAPSHOT PREFIX
################################################################################

# FIXME: Disable running checks for the time being 
%global _without_check 1

%bcond_without snapshot_build

%if %{with snapshot_build}

# Check if we're building with copr
%if 0%{?copr_projectname:1}

# Remove the .copr prefix that is added here infront the build ID
# see https://pagure.io/copr/copr/blob/main/f/rpmbuild/mock.cfg.j2#_22-25
%global copr_build_id %{lua: print(string.sub(rpm.expand("%buildtag"), 6))}

%global copr_build_link https://copr.fedorainfracloud.org/coprs/build/%{copr_build_id}/
%endif

%global llvm_snapshot_yyyymmdd           ${yyyymmdd}
%global llvm_snapshot_version            ${llvm_version}
%global llvm_snapshot_version_major      ${llvm_version_major}
%global llvm_snapshot_version_minor      ${llvm_version_minor}
%global llvm_snapshot_version_patch      ${llvm_version_patch}
%global llvm_snapshot_git_revision       ${llvm_git_revision}
%global llvm_snapshot_git_revision_short ${llvm_git_revision_short}

%global llvm_snapshot_version_suffix     pre%{llvm_snapshot_yyyymmdd}.g%{llvm_snapshot_git_revision_short}

# This prints a multiline string for the changelog entry
%{lua: function _llvm_snapshot_changelog_entry()
    assert(os.setlocale('C'))
    print(string.format("* %s LLVM snapshot - %s\n", os.date("%a %b %d %Y"), rpm.expand("%version")))
    print("- This is an automated snapshot build")
    -- TODO(kkleine): Switch to rpm.isdefined() once it is available on copr builders
    if rpm.expand("%copr_build_link") ~= "%copr_build_link" then
        print(string.format(" (%s)", rpm.expand("%copr_build_link")))
    end
    print("\n\n")
end}

%global llvm_snapshot_changelog_entry %{lua: _llvm_snapshot_changelog_entry()}

%endif

################################################################################
# END SNAPSHOT PREFIX
################################################################################
EOF
}