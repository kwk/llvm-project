name: re-build source-snapshot

on:
  # Uncomment to be able to trigger the workflow manually
  # See https://docs.github.com/en/actions/reference/events-that-trigger-workflows#manual-events
  workflow_dispatch: {}

  schedule:
    # Everyday at 04:00am
    # See https://docs.github.com/en/actions/reference/events-that-trigger-workflows#schedule
    - cron:  '0 4 * * *'

jobs:

  # In order to re-build source snapshots and upload them, we must first delete
  # the old ones from today; otherwise there would be a conflict.
  find:
    name: find today's source snapshots
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.assets.outputs.name_id_pairs }}
    steps:
      - name: find
        id: assets
        run: |
          curl \
            -H "Accept: application/vnd.github.v3+json" \
            -sL https://api.github.com/repos/${{ github.repository }}/releases/tags/source-snapshot \
          | jq '.assets' > assets.json

          # This is pretty awkward but otherwise the matrix below complains about:
          # Matrix vector 'cfg' does not contain any values
          pairs='[{"name":"stop","id":"stop"}]'

          if [ -s assets.json ]; then
            # Get all assets of today
            jq 'map(select((.created_at | fromdate | strftime("%Y%m%d")) == (now | strftime("%Y%m%d"))))' < assets.json > remove_assets.json
            
            echo "[]" > empty.json
            diff remove_assets.json empty.json >/dev/null
            if [ "$?" != "0" ]; then
              echo "about to remove these assets:"
              jq '.[].name' -r  < remove_assets.json

              pairs=`jq '[.[] | {name:.name, id:.id} ]' -rc < remove_assets.json`
            fi
          fi
          echo "::set-output name=name_id_pairs::$pairs"
  
  delete:
    needs: find
    name: delete today's source-snapshots (if any)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cfg:
          - ${{ fromJson(needs.find.outputs.matrix) }}
    steps:
      - name: delete ${{ matrix.cfg.name }} (ID=${{ matrix.cfg.id }})
        if: ${{ matrix.cfg.name != "stop" && matrix.cfg.id != "stop" }}
        uses: octokit/request-action@v2.x
        with:
          route: DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}
          owner: 'kwk'
          repo: 'llvm-project'
          asset_id: ${{ matrix.cfg.id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  re-build-source-snapshot:
    needs: delete
    name: re-build source snapshots for today
    runs-on: ubuntu-latest
    steps:

      - name: checkout llvm/llvm-project repo
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          ref: snapshot
          token: ${{ github.token }}
          fetch-depth: 0
          submodules: true
      
      - name: setup upstream remote
        run: git remote add upstream https://github.com/llvm/llvm-project.git
      
      - name: fetch from upstream remote
        run: git fetch upstream
      
      - name: rebase onto upstream/main
        run: |
          git config user.email "snapshot-bot@example.com"
          git config user.name "snapshot bot"
          git rebase upstream/main
      
      - name: push back origin/snapshot
        run: git push -f origin HEAD:snapshot

      - name: create source-snapshot tarballs
        run: |
          cd llvm/utils/release
          ./export.sh -snapshot

      - name: Upload source tarballs to source-snapshot release assets (continous release)
        uses: softprops/action-gh-release@v1
        with:
          name: source-snapshot
          draft: false
          prerelease: true
          tag_name: source-snapshot
          fail_on_unmatched_files: true
          files: |
            llvm/utils/release/*.src.tar.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
