name: re-build source-snapshot

on:
  # Uncomment to be able to trigger the workflow manually
  # See https://docs.github.com/en/actions/reference/events-that-trigger-workflows#manual-events
  workflow_dispatch: {}

  schedule:
    # Everyday at 04:00am
    # See https://docs.github.com/en/actions/reference/events-that-trigger-workflows#schedule
    - cron:  '0 4 * * *'

jobs:

  # In order to re-build source snapshots and upload them, we must first delete
  # the old ones from today; otherwise there would be a conflict. As a measure
  # of not storing old snapshots for too long we'll delete older ones here as
  # well.
  find:
    name: find today's and 3 days or older source snapshots
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.assets.outputs.name_id_pairs }}
    steps:
      - name: find
        id: assets
        run: |
          echo "::group::Find all source snapshot release assets"
          curl \
            -H "Accept: application/vnd.github.v3+json" \
            -sL https://api.github.com/repos/${{ github.repository }}/releases/tags/source-snapshot \
          | jq '.assets' | tee assets.json
          echo "::endgroup::"

          # This is pretty awkward but otherwise the matrix below complains about:
          # Matrix vector 'cfg' does not contain any values
          pairs='[{"name":"stop","id":"stop"}]'

          if [ -s assets.json ]; then
            echo "::group::Get assets from today or older than three days"
            # Get all of today's assets or those older than three days
            jq \
              --arg e $(date -d "-3 days" +%Y-%m-%dT%H:%S) \
              'map(
                select(
                  (.created_at <= $e + "z")
                  or 
                  ((.created_at | fromdate | strftime("%Y%m%d")) == (now | strftime("%Y%m%d")))
                )
              )' < assets.json | tee remove_assets.json
            echo "::endgroup::"

            echo "::group::diff"
            echo "[]" > empty.json
            set +e
            diff remove_assets.json empty.json | tee mydiff
            set -e
            echo "::endgroup::"

            if [ -s mydiff ]; then
              echo "::group::Assets to be removed"
              jq '.[].name' -r  < remove_assets.json
              echo "::endgroup::"
              pairs=`jq '[.[] | {name:.name, id:.id} ]' -rc < remove_assets.json`
            fi
          fi
          echo "::set-output name=name_id_pairs::$pairs"
  
  delete:
    needs: find
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 10
      matrix:
        cfg:
          - ${{ fromJson(needs.find.outputs.matrix) }}
    steps:
      - name: delete ${{ matrix.cfg.name }} (ID=${{ matrix.cfg.id }})
        if: ${{ matrix.cfg.name != 'stop' && matrix.cfg.id != 'stop' }}
        uses: octokit/request-action@v2.x
        with:
          route: DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}
          owner: 'kwk'
          repo: 'llvm-project'
          asset_id: ${{ matrix.cfg.id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  re-build-source-snapshot:
    needs: delete
    name: re-build today's source snapshot
    runs-on: ubuntu-latest
    steps:

      # - name: checkout llvm/llvm-project repo
      #   uses: actions/checkout@v2
      #   with:
      #     repository: ${{ github.repository }}
      #     ref: snapshot
      #     token: ${{ github.token }}
      #     fetch-depth: 1
      #     submodules: true
      
      - name: partial clone and sparse checkout of kwk/llvm-project repo
        run: |
          git clone --branch=main --depth=1 --filter=blob:none --sparse https://github.com/kwk/llvm-project.git kwk
          git -C kwk sparse-checkout init --cone
          git -C kwk sparse-checkout set llvm/utils/release/export.sh
          tree kwk
          
      - name: setup upstream remote
        run: git remote add upstream https://github.com/llvm/llvm-project.git
      
      - name: fetch from upstream remote
        run: git fetch upstream

      - name: create source-snapshot tarballs
        run: |
          llvm/utils/release/export.sh --snapshot upstream/main
      
      - name: upload today's source snapshots and version file
        uses: softprops/action-gh-release@v1
        with:
          name: source-snapshot
          draft: false
          prerelease: true
          tag_name: source-snapshot
          fail_on_unmatched_files: true
          # TODO(kwk): Help wanted! If you know something better to match YYYYMMDD, please share it.
          files: |
            *-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9].src.tar.xz
            llvm-release-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9].txt
            llvm-rc-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9].txt
            llvm-git-revision-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9].txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
